#!/bin/bash
#######################################################
# PlayCover Manager - „Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„Éì„É´„ÉÄ„Éº
# ÈÖçÂ∏ÉÂèØËÉΩ„Å™macOS .app„Éê„É≥„Éâ„É´„Çí‰ΩúÊàê
#######################################################

set -e

APP_NAME="PlayCover Manager"
APP_VERSION="5.2.0"
BUNDLE_ID="com.playcover.manager"
BUILD_DIR="build"
APP_BUNDLE="${BUILD_DIR}/${APP_NAME}.app"

echo "üöÄ ${APP_NAME} v${APP_VERSION} „Çí„Éì„É´„Éâ‰∏≠..."
echo ""

# ‰ª•Ââç„ÅÆ„Éì„É´„Éâ„Çí„ÇØ„É™„Éº„É≥„Ç¢„ÉÉ„Éó
if [ -d "${BUILD_DIR}" ]; then
    echo "üßπ ‰ª•Ââç„ÅÆ„Éì„É´„Éâ„Çí„ÇØ„É™„Éº„É≥„Ç¢„ÉÉ„Éó‰∏≠..."
    rm -rf "${BUILD_DIR}"
fi

# .app„Éê„É≥„Éâ„É´ÊßãÈÄ†„Çí‰ΩúÊàê
echo "üì¶ .app„Éê„É≥„Éâ„É´ÊßãÈÄ†„Çí‰ΩúÊàê‰∏≠..."
mkdir -p "${APP_BUNDLE}/Contents/MacOS"
mkdir -p "${APP_BUNDLE}/Contents/Resources"
mkdir -p "${APP_BUNDLE}/Contents/Resources/lib"

# „É°„Ç§„É≥„Çπ„ÇØ„É™„Éó„Éà„ÇíResources„Å´„Ç≥„Éî„Éº
echo "üìù „É°„Ç§„É≥„Çπ„ÇØ„É™„Éó„Éà„Çí„Ç≥„Éî„Éº‰∏≠..."
cp main.sh "${APP_BUNDLE}/Contents/Resources/main-script.sh"
chmod +x "${APP_BUNDLE}/Contents/Resources/main-script.sh"

# ÂÖ®„Å¶„ÅÆ„É©„Ç§„Éñ„É©„É™„É¢„Ç∏„É•„Éº„É´„Çí„Ç≥„Éî„Éº
echo "üìö „É©„Ç§„Éñ„É©„É™„É¢„Ç∏„É•„Éº„É´„Çí„Ç≥„Éî„Éº‰∏≠..."
cp -r lib/* "${APP_BUNDLE}/Contents/Resources/lib/"

# „É°„Ç§„É≥„Çπ„ÇØ„É™„Éó„Éà„ÅÆSCRIPT_DIR„ÇíResources„Çí‰Ωø„ÅÜ„Çà„ÅÜ„Å´Êõ¥Êñ∞
echo "üîß „Çπ„ÇØ„É™„Éó„Éà„Éë„Çπ„ÇíÊõ¥Êñ∞‰∏≠..."
# SCRIPT_DIR„ÅÆ„ÅøÊõ¥Êñ∞Ôºàzsh shebang„ÅØ‰øùÊåÅÔºâ
sed -i.bak 's|SCRIPT_DIR="${0:A:h}"|SCRIPT_DIR="$(cd "$(dirname "$0")" \&\& pwd)"|' "${APP_BUNDLE}/Contents/Resources/main-script.sh"
rm -f "${APP_BUNDLE}/Contents/Resources/main-script.sh.bak"

# MacOS„Éá„Ç£„É¨„ÇØ„Éà„É™„Å´„É©„É≥„ÉÅ„É£„Éº„Çπ„ÇØ„É™„Éó„Éà„Çí‰ΩúÊàê
echo "üöÄ „É©„É≥„ÉÅ„É£„Éº„Çπ„ÇØ„É™„Éó„Éà„Çí‰ΩúÊàê‰∏≠..."
cat > "${APP_BUNDLE}/Contents/MacOS/PlayCoverManager" << 'LAUNCHER_EOF'
#!/bin/bash
#######################################################
# PlayCover Manager - Single Instance Launcher
# Prevents multiple Terminal windows
#######################################################

# Resources„Éá„Ç£„É¨„ÇØ„Éà„É™„ÇíÂèñÂæó
RESOURCES_DIR="$(cd "$(dirname "$0")/../Resources" && pwd)"
MAIN_SCRIPT="${RESOURCES_DIR}/main-script.sh"

# „É°„Ç§„É≥„Çπ„ÇØ„É™„Éó„Éà„ÅÆÂ≠òÂú®Á¢∫Ë™ç
if [ ! -f "$MAIN_SCRIPT" ]; then
    osascript -e 'display dialog "PlayCover Manager„Çπ„ÇØ„É™„Éó„Éà„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„ÇìÔºÅ" buttons {"OK"} default button 1 with icon stop'
    exit 1
fi

# Lock file to prevent multiple instances
LOCK_FILE="${TMPDIR:-/tmp}/playcover-manager-app.lock"
LOCK_PID_FILE="${TMPDIR:-/tmp}/playcover-manager-app.pid"

# Check if already running
if [[ -f "$LOCK_FILE" ]] && [[ -f "$LOCK_PID_FILE" ]]; then
    EXISTING_PID=$(cat "$LOCK_PID_FILE" 2>/dev/null)
    
    # Check if the process is actually running
    if kill -0 "$EXISTING_PID" 2>/dev/null; then
        # Already running - bring Terminal to front
        osascript <<'APPLESCRIPT' 2>/dev/null
tell application "Terminal"
    activate
    -- Find and activate the PlayCover Manager window
    set foundWindow to false
    repeat with w in windows
        set windowName to name of w
        if windowName contains "PlayCover" then
            set foundWindow to true
            set index of w to 1
            exit repeat
        end if
    end repeat
    
    -- If window not found, just activate Terminal
    if not foundWindow then
        tell application "System Events"
            tell process "Terminal"
                set frontmost to true
            end tell
        end tell
    end if
end tell
APPLESCRIPT
        exit 0
    else
        # Stale lock - remove it
        rm -f "$LOCK_FILE" "$LOCK_PID_FILE"
    fi
fi

# Create lock with PID
echo $$ > "$LOCK_PID_FILE"
touch "$LOCK_FILE"

# Cleanup on exit
cleanup_lock() {
    rm -f "$LOCK_FILE" "$LOCK_PID_FILE"
}

trap cleanup_lock EXIT INT TERM

# Launch in Terminal with custom title
osascript <<APPLESCRIPT
tell application "Terminal"
    activate
    do script "clear; printf '\\033]0;PlayCover Manager\\007'; cd '$RESOURCES_DIR'; /bin/zsh '$MAIN_SCRIPT'; exit"
end tell
APPLESCRIPT

# Monitor the Terminal process
while kill -0 $$ 2>/dev/null; do
    # Check if Terminal window is still open by checking if script is running
    if ! pgrep -f "$MAIN_SCRIPT" >/dev/null 2>&1; then
        # Script finished - clean up and exit
        break
    fi
    sleep 1
done

LAUNCHER_EOF

chmod +x "${APP_BUNDLE}/Contents/MacOS/PlayCoverManager"

# „Ç¢„Éó„É™„Ç¢„Ç§„Ç≥„É≥„ÅåÂà©Áî®ÂèØËÉΩ„Å™Â†¥Âêà„ÅØ„Ç≥„Éî„Éº
if [ -f "AppIcon.icns" ]; then
    echo "üé® „Ç¢„Éó„É™„Ç¢„Ç§„Ç≥„É≥„ÇíËøΩÂä†‰∏≠..."
    cp AppIcon.icns "${APP_BUNDLE}/Contents/Resources/"
    ICON_KEY='    <key>CFBundleIconFile</key>
    <string>AppIcon</string>'
else
    echo "‚ÑπÔ∏è  AppIcon.icns„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„ÇìÔºàmacOS„Åß ./create-icon.sh „ÇíÂÆüË°å„Åó„Å¶‰ΩúÊàê„Åó„Å¶„Åè„Å†„Åï„ÅÑÔºâ"
    ICON_KEY=""
fi

# Info.plist„Çí‰ΩúÊàê
echo "üìÑ Info.plist„Çí‰ΩúÊàê‰∏≠..."
cat > "${APP_BUNDLE}/Contents/Info.plist" << EOF
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>CFBundleDevelopmentRegion</key>
    <string>ja_JP</string>
    <key>CFBundleExecutable</key>
    <string>PlayCoverManager</string>
    <key>CFBundleIdentifier</key>
    <string>${BUNDLE_ID}</string>
    <key>CFBundleInfoDictionaryVersion</key>
    <string>6.0</string>
    <key>CFBundleName</key>
    <string>${APP_NAME}</string>
    <key>CFBundlePackageType</key>
    <string>APPL</string>
    <key>CFBundleShortVersionString</key>
    <string>${APP_VERSION}</string>
    <key>CFBundleVersion</key>
    <string>${APP_VERSION}</string>
${ICON_KEY}
    <key>LSMinimumSystemVersion</key>
    <string>15.1</string>
    <key>LSArchitecturePriority</key>
    <array>
        <string>arm64</string>
    </array>
    <key>LSApplicationCategoryType</key>
    <string>public.app-category.utilities</string>
    <key>NSHumanReadableCopyright</key>
    <string>Copyright ¬© 2024. All rights reserved.</string>
    <key>LSUIElement</key>
    <false/>
    <key>NSHighResolutionCapable</key>
    <true/>
</dict>
</plist>
EOF

# „Ç¢„Éó„É™„Ç¢„Ç§„Ç≥„É≥„Çí‰ΩúÊàêÔºà„Ç™„Éó„Ç∑„Éß„É≥ - SF Symbols„Çí„Éó„É¨„Éº„Çπ„Éõ„É´„ÉÄ„Éº„Å®„Åó„Å¶‰ΩøÁî®Ôºâ
echo "üé® „Ç¢„Éó„É™„Ç¢„Ç§„Ç≥„É≥„Çí‰ΩúÊàê‰∏≠..."
# „Åì„Çå„ÅØ„Ç∑„É≥„Éó„É´„Å™„Ç¢„Ç§„Ç≥„É≥„Éó„É¨„Éº„Çπ„Éõ„É´„ÉÄ„Éº„Çí‰ΩúÊàê„Åó„Åæ„Åô
# ÂÆüÈöõ„ÅÆ„Ç¢„Ç§„Ç≥„É≥„Å´„ÅØ„ÄÅiconutil„Çí‰ΩøÁî®„Åó„Å¶.icns„Éï„Ç°„Ç§„É´„Çí‰ΩúÊàê„Åó„Åæ„Åô
cat > "${APP_BUNDLE}/Contents/Resources/AppIcon.iconset.txt" << EOF
# To create a proper icon:
# 1. Create AppIcon.iconset directory with PNG files
# 2. Run: iconutil -c icns AppIcon.iconset
# 3. Move AppIcon.icns to Contents/Resources/
EOF

# „Ç¢„Éó„É™ÂÜÖ„Å´README„Çí‰ΩúÊàê
echo "üìñ „Éê„É≥„Éâ„É´„Åï„Çå„ÅüREADME„Çí‰ΩúÊàê‰∏≠..."
cat > "${APP_BUNDLE}/Contents/Resources/README.txt" << EOF
PlayCover Manager v${APP_VERSION}
================================

APFS Volume Management Tool for PlayCover

Features:
- App volume management (create, mount, unmount)
- Batch operations for multiple apps
- Storage location switching (internal/external)
- Disk eject with safety checks
- Automatic mapping file management

Requirements:
- macOS Sequoia 15.1 or later
- Apple Silicon Mac
- PlayCover installed

Usage:
Double-click "PlayCover Manager.app" to launch the tool.

License: MIT
Repository: https://github.com/HEHEX8/PlayCoverManager
EOF

# „Éâ„Ç≠„É•„É°„É≥„Éà„Çí„Ç≥„Éî„Éº
echo "üìö „Éâ„Ç≠„É•„É°„É≥„Éà„Çí„Ç≥„Éî„Éº‰∏≠..."
if [ -f "README.md" ]; then
    cp README.md "${APP_BUNDLE}/Contents/Resources/"
fi
if [ -f "README-EN.md" ]; then
    cp README-EN.md "${APP_BUNDLE}/Contents/Resources/"
fi
if [ -f "RELEASE_NOTES_5.0.0.md" ]; then
    cp RELEASE_NOTES_5.0.0.md "${APP_BUNDLE}/Contents/Resources/"
fi

# DMG‰ΩúÊàê„Å´„Å§„ÅÑ„Å¶„ÅÆÊ≥®ÊÑè
echo ""
echo "‚ÑπÔ∏è  Âü∫Êú¨ÁöÑ„Å™„Ç¢„Éó„É™„Éê„É≥„Éâ„É´„Çí‰ΩúÊàê„Åó„Åæ„Åó„Åü"
echo "   „Ç´„Çπ„Çø„É†„É¨„Ç§„Ç¢„Ç¶„Éà„ÅÆ„Éó„É≠„Éï„Çß„ÉÉ„Ç∑„Éß„Éä„É´„Å™DMG„Å´„ÅØ„ÄÅmacOS„Åß‰ª•‰∏ã„ÇíÂÆüË°å:"
echo "   ./create-installer-dmg.sh"

# ÈÖçÂ∏ÉÁî®„ÅÆZIP„Çí‰ΩúÊàê
echo ""
echo "üì¶ ÈÖçÂ∏ÉÁî®„ÅÆZIP„Çí‰ΩúÊàê‰∏≠..."
ZIP_NAME="${APP_NAME}-${APP_VERSION}.zip"
cd "${BUILD_DIR}"
zip -r -q "${ZIP_NAME}" "${APP_NAME}.app"
cd ..

echo ""
echo "‚úÖ „Éì„É´„ÉâÂÆå‰∫ÜÔºÅ"
echo ""
echo "üìÅ Âá∫Âäõ„Éï„Ç°„Ç§„É´:"
echo "   ‚Ä¢ „Ç¢„Éó„É™„Éê„É≥„Éâ„É´: ${APP_BUNDLE}"
if [ -f "${DMG_PATH}" ]; then
    echo "   ‚Ä¢ DMG: ${DMG_PATH}"
fi
echo "   ‚Ä¢ ZIP: ${BUILD_DIR}/${ZIP_NAME}"
echo ""
echo "üöÄ ÈÖçÂ∏ÉÊ∫ñÂÇôÂÆå‰∫ÜÔºÅ"
echo ""
echo "üì¶ ÈÖçÂ∏ÉÊñπÊ≥ï:"
echo "   1. Á∞°Âçò„Å™„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„Å´„ÅØ.zip„Éï„Ç°„Ç§„É´„ÇíÂÖ±Êúâ"
echo "   2. „Åæ„Åü„ÅØÂæìÊù•„ÅÆ„Ç§„É≥„Çπ„Éà„Éº„É©„Éº„Å´„ÅØ.dmg„Éï„Ç°„Ç§„É´„ÇíÂÖ±Êúâ"
echo "   3. „É¶„Éº„Ç∂„Éº„ÅØ„Ç¢„Éó„É™„ÇíApplications„Éï„Ç©„É´„ÉÄ„Å´„Éâ„É©„ÉÉ„Ç∞„Åß„Åç„Åæ„Åô"
echo ""
echo "üîê Ê≥®ÊÑèÔºöÂàùÂõûËµ∑ÂãïÊôÇ„ÄÅ„É¶„Éº„Ç∂„Éº„ÅØ‰ª•‰∏ã„ÅåÂøÖË¶Å„Å™Â†¥Âêà„Åå„ÅÇ„Çä„Åæ„Åô:"
echo "   ‚Ä¢ Âè≥„ÇØ„É™„ÉÉ„ÇØ ‚Üí Èñã„ÅèÔºàGatekeeper„Çí„Éê„Ç§„Éë„ÇπÔºâ"
echo "   ‚Ä¢ „Ç∑„Çπ„ÉÜ„É†Ë®≠ÂÆö„ÅßTerminalÊ®©Èôê„Çí‰ªò‰∏é"
echo ""
